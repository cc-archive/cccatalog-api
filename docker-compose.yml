version: '3'
services:
  db:
    image: postgres:10.3-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "openledger"
      POSTGRES_USER: "deploy"
      POSTGRES_PASSWORD: "deploy"
      POSTGRES_HOST: "0.0.0.0"
    healthcheck:
      test: "pg_isready -U deploy -d openledger"

  thumbs:
    image: willnorris/imageproxy
    ports:
      - "8222:8222"
    command: ["-addr", "0.0.0.0:8222"]

  upstream_db:
    image: postgres:10.3-alpine
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: "openledger"
      POSTGRES_USER: "deploy"
      POSTGRES_PASSWORD: "deploy"
      POSTGRES_HOST: "0.0.0.0"
    healthcheck:
      test: "pg_isready -U deploy -d openledger"

  es:
    image: elasticsearch:7.1.0
    ports:
      - "9200:9200"
    environment:
      # disable XPack
      # https://www.elastic.co/guide/en/elasticsearch/reference/5.3/docker.html#_security_note
      - xpack.security.enabled=false
      - discovery.type=single-node
    healthcheck:
      test: ["CMD-SHELL", "curl -si -XGET 'localhost:9200/_cluster/health?pretty' | grep -qE 'yellow|green'"]
      interval: 10s
      timeout: 60s
      retries: 10
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  web:
    build: ./cccatalog-api/
    image: cccatalog_api
    command: python manage.py runserver 0.0.0.0:8000
    container_name: cccatalog-api_web_1
    volumes:
      - ./cccatalog-api:/cccatalog-api
    ports:
      - "8000:8000"
      - "4444:4444"
    depends_on:
      - db
      - es
    environment:
      DJANGO_DATABASE_NAME: "openledger"
      DJANGO_DATABASE_USER: "deploy"
      DJANGO_DATABASE_PASSWORD: "deploy"
      DJANGO_DATABASE_HOST: "db"
      UPSTREAM_DATABASE_HOST: "upstream_db"
      PYTHONUNBUFFERED: "0"
      DJANGO_DEBUG_ENABLED: "True"
      ELASTICSEARCH_URL: "es"
      ELASTICSEARCH_PORT: "9200"
      DISABLE_GLOBAL_THROTTLING: "True"
      ROOT_SHORTENING_URL: "localhost:8000"
    stdin_open: true
    tty: true

  cache:
    image: redis:4.0.10
    ports:
      - "6379:6379"

  ingestion-server:
    build: ./ingestion_server/
    command: bash -c 'sleep 20 && supervisord -c config/supervisord.conf'
    ports: 
      - "8001:8001"
    depends_on:
      - db
      - es
      - indexer-worker
    volumes:
      - ./ingestion_server:/ingestion-server
    environment:
      PYTHONUNBUFFERED: "0"
      ELASTICSEARCH_URL: 'es'
      ELASTICSEARCH_PORT: "9200"
      DATABASE_HOST: 'db'
      DATABASE_USER: 'deploy'
      DATABASE_PASSWORD: 'deploy'
      DATABASE_NAME: 'openledger'
      DATABASE_PORT: '5432'
      UPSTREAM_DB_HOST: 'upstream_db'
      UPSTREAM_DB_PORT: 5432
      DB_BUFFER_SIZE: '100000'
      COPY_TABLES: 'image'
      SYNCER_POLL_INTERVAL: '60'
    stdin_open: true
    tty: true

  indexer-worker:
    build:
      context: ./ingestion_server/
      dockerfile: Dockerfile-worker
    container_name: indexer-worker
    ports: 
      - "8002:8002"
    depends_on:
      - db
      - es
    volumes:
      - ./ingestion_server:/ingestion-server
    environment:
      PYTHONUNBUFFERED: "0"
      ELASTICSEARCH_URL: 'es'
      ELASTICSEARCH_PORT: "9200"
      DATABASE_HOST: 'db'
      DATABASE_USER: 'deploy'
      DATABASE_PASSWORD: 'deploy'
      DATABASE_NAME: 'openledger'
      DATABASE_PORT: '5432'
      UPSTREAM_DB_HOST: 'upstream_db'
      UPSTREAM_DB_PORT: 5432
      DB_BUFFER_SIZE: '100000'
      COPY_TABLES: 'image'
      SYNCER_POLL_INTERVAL: '60'
    stdin_open: true
    tty: true

  analytics:
    build: ./analytics/
    image: analytics
    container_name: cccatalog-api_analytics_1
    ports:
      - "8090:8090"
    environment:
      DATABASE_CONN: 'postgres+psycopg2://deploy:deploy@db/analytics'

  nginx:
    image: nginx:1.17.9
    volumes:
      - ./nginx/proxy.conf:/etc/nginx/conf.d/proxy.conf
    ports:
      - "8080:8080"
    depends_on:
      - web
      - thumbs